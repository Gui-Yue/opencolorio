From 7575d9cb0f514a43a4a8b107793914589ae5ac9a Mon Sep 17 00:00:00 2001
From: Patrick Hodoul <patrick.hodoul@autodesk.com>
Date: Fri, 15 Nov 2019 14:37:27 -0500
Subject: [PATCH] Adsk Contrib - Fix the display order issue (#883)

* Adsk Contrib - Fix the display order issue & Improve the serialization precision for double values.

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* Remove useless code

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* More cleanup for Yaml build

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* Improve Clang7 Release support

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* Improve Yaml error handling

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* Disable Clang optimizations for OCIOYaml.cpp only

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* Remove an hard-coded number

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* Fix last remaining clang7 vs Yaml issues

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>

* Fix last remaining clang7 vs Yaml issues, take II

Signed-off-by: Patrick Hodoul <Patrick.Hodoul@autodesk.com>
---
 ext/CMakeLists.txt                    |   2 +-
 share/cmake/modules/FindYamlCpp.cmake |  23 +-
 src/OpenColorIO/Config.cpp            | 249 ++++++++++++--
 src/OpenColorIO/Display.cpp           |   2 +-
 src/OpenColorIO/Display.h             |   8 +-
 src/core/OCIOYaml.cpp          | 454 ++++++++++----------------
 6 files changed, 400 insertions(+), 338 deletions(-)

--- a/src/core/OCIOYaml.cpp
+++ b/src/core/OCIOYaml.cpp
@@ -55,96 +55,38 @@ OCIO_NAMESPACE_ENTER
     namespace
     {
     
-#ifdef OLDYAML
-        typedef YAML::Iterator Iterator;
-#else
         typedef YAML::const_iterator Iterator;
-#endif
 
-        // Iterator access
-        // Note: The ownership semantics have changed between yaml-cpp 0.3.x and 0.5.x .
-        // Returning a const reference to a yaml node screws with the internal yaml-cpp smart ptr 
-        // implementation in the newer version. Luckily, the compiler does not care if we maintain
-        // const YAML::Node & = get_first(iter) syntax at the call site even when returning an actual object
-        // (instead of the reference as expected).
-#ifdef OLDYAML
-        inline const YAML::Node& get_first(const Iterator &it)
-        {
-            return it.first();
-        }
-#else
-        inline YAML::Node get_first(const Iterator &it)
-        {
-            return it->first;
-        }
-#endif
-        
-#ifdef OLDYAML
-        inline const YAML::Node& get_second(const Iterator &it)
-        {
-            return it.second();
-        }
-#else
-        inline YAML::Node get_second(const Iterator &it)
-        {
-            return it->second;
-        }
-#endif
-        
         // Basic types
         
         inline void load(const YAML::Node& node, bool& x)
         {
-#ifdef OLDYAML
-            node.Read<bool>(x);
-#else
             x = node.as<bool>();
-#endif
         }
         
         inline void load(const YAML::Node& node, int& x)
         {
-#ifdef OLDYAML
-            node.Read<int>(x);
-#else
             x = node.as<int>();
-#endif
         }
         
         inline void load(const YAML::Node& node, float& x)
         {
-#ifdef OLDYAML
-            node.Read<float>(x);
-#else
             x = node.as<float>();
-#endif
         }
         
         inline void load(const YAML::Node& node, std::string& x)
         {
-#ifdef OLDYAML
-            node.Read<std::string>(x);
-#else
             x = node.as<std::string>();
-#endif
         }
         
         inline void load(const YAML::Node& node, std::vector<std::string>& x)
         {
-#ifdef OLDYAML
-            node >> x;
-#else
             x = node.as<std::vector<std::string> >();
-#endif
         }
         
         inline void load(const YAML::Node& node, std::vector<float>& x)
         {
-#ifdef OLDYAML
-            node >> x;
-#else
             x = node.as<std::vector<float> >();
-#endif
         }
         
         // Enums
@@ -231,16 +173,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key, stringval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "name")
                 {
@@ -308,16 +248,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
                 
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "allocation")
                 {
@@ -377,16 +315,14 @@ OCIO_NAMESPACE_ENTER
             std::string key;
             std::vector<float> floatvecval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "slope")
                 {
@@ -489,16 +425,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key, stringval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "src")
                 {
@@ -541,16 +475,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "value")
                 {
@@ -599,16 +531,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key, stringval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "src")
                 {
@@ -668,16 +598,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
                 
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "children")
                 {
@@ -736,16 +664,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
                 
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "base")
                 {
@@ -783,16 +709,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key, stringval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "src")
                 {
@@ -841,16 +765,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "matrix")
                 {
@@ -924,16 +846,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key, stringval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
                 
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "config_root")
                 {
@@ -1188,16 +1108,14 @@ OCIO_NAMESPACE_ENTER
             std::string key, stringval;
             bool boolval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "name")
                 {
@@ -1318,16 +1236,14 @@ OCIO_NAMESPACE_ENTER
             
             std::string key, stringval;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "name")
                 {
@@ -1402,11 +1318,7 @@ OCIO_NAMESPACE_ENTER
             
             // check profile version
             int profile_version = 0;
-#ifdef OLDYAML
-            if(node.FindValue("ocio_profile_version") == NULL)
-#else
-            if(node["ocio_profile_version"] == NULL)
-#endif
+            if(!node["ocio_profile_version"].IsDefined())
             {
                 std::ostringstream os;
                 os << "The specified file ";
@@ -1435,16 +1347,14 @@ OCIO_NAMESPACE_ENTER
             bool boolval = false;
             EnvironmentMode mode = ENV_ENVIRONMENT_LOAD_ALL;
             
-            for (Iterator iter = node.begin();
-                 iter != node.end();
-                 ++iter)
+            for (const auto & iter : node)
             {
-                const YAML::Node& first = get_first(iter);
-                const YAML::Node& second = get_second(iter);
-                
+                const YAML::Node& first = iter.first;
+                const YAML::Node& second = iter.second;
+
                 load(first, key);
                 
-                if (second.Type() == YAML::NodeType::Null) continue;
+                if (second.IsNull() || !second.IsDefined()) continue;
                 
                 if(key == "ocio_profile_version") { } // Already handled above.
                 else if(key == "environment")
@@ -1456,13 +1366,11 @@ OCIO_NAMESPACE_ENTER
                         os << "'environment' field needs to be a (name: key) map.";
                         throw Exception(os.str().c_str());
                     }
-                    for (Iterator it = second.begin();
-                         it != second.end();
-                         ++it)
+                    for (const auto & it : second)
                     {
                         std::string k, v;
-                        load(get_first(it), k);
-                        load(get_second(it), v);
+                        load(it.first, k);
+                        load(it.second, v);
                         c->addEnvironmentVar(k.c_str(), v.c_str());
                     }
                 }
@@ -1502,13 +1410,11 @@ OCIO_NAMESPACE_ENTER
                         os << "'roles' field needs to be a (name: key) map.";
                         throw Exception(os.str().c_str());
                     }
-                    for (Iterator it = second.begin();
-                         it != second.end();
-                         ++it)
+                    for (const auto & it : second)
                     {
                         std::string k, v;
-                        load(get_first(it), k);
-                        load(get_second(it), v);
+                        load(it.first, k);
+                        load(it.second, v);
                         c->setRole(k.c_str(), v.c_str());
                     }
                 }
@@ -1520,17 +1426,17 @@ OCIO_NAMESPACE_ENTER
                         os << "'displays' field needs to be a (name: key) map.";
                         throw Exception(os.str().c_str());
                     }
-                    for (Iterator it = second.begin();
-                         it != second.end();
-                         ++it)
+                    for (const auto & it : second)
                     {
                         std::string display;
-                        load(get_first(it), display);
-                        const YAML::Node& dsecond = get_second(it);
-                        for(unsigned i = 0; i < dsecond.size(); ++i)
+                        load(it.first, display);
+
+                        const YAML::Node& dsecond = it.second;
+
+                        for(const auto & val : dsecond)
                         {
                             View view;
-                            load(dsecond[i], view);
+                            load(val, view);
                             c->addDisplay(display.c_str(), view.name.c_str(),
                                           view.colorspace.c_str(), view.looks.c_str());
                         }
@@ -1558,12 +1464,12 @@ OCIO_NAMESPACE_ENTER
                         os << "'colorspaces' field needs to be a (- !<ColorSpace>) list.";
                         throw Exception(os.str().c_str());
                     }
-                    for(unsigned i = 0; i < second.size(); ++i)
+                    for(const auto & val : second)
                     {
-                        if(second[i].Tag() == "ColorSpace")
+                        if(val.Tag() == "ColorSpace")
                         {
                             ColorSpaceRcPtr cs = ColorSpace::Create();
-                            load(second[i], cs);
+                            load(val, cs);
                             for(int ii = 0; ii < c->getNumColorSpaces(); ++ii)
                             {
                                 if(strcmp(c->getColorSpaceNameByIndex(ii), cs->getName()) == 0)
@@ -1579,7 +1485,7 @@ OCIO_NAMESPACE_ENTER
                         {
                             std::ostringstream os;
                             os << "Unknown element found in colorspaces:";
-                            os << second[i].Tag() << ". Only ColorSpace(s)";
+                            os << val.Tag() << ". Only ColorSpace(s)";
                             os << " currently handled.";
                             LogWarning(os.str());
                         }
@@ -1594,19 +1500,19 @@ OCIO_NAMESPACE_ENTER
                         throw Exception(os.str().c_str());
                     }
                     
-                    for(unsigned i = 0; i < second.size(); ++i)
+                    for(const auto & val : second)
                     {
-                        if(second[i].Tag() == "Look")
+                        if(val.Tag() == "Look")
                         {
                             LookRcPtr look = Look::Create();
-                            load(second[i], look);
+                            load(val, look);
                             c->addLook(look);
                         }
                         else
                         {
                             std::ostringstream os;
                             os << "Unknown element found in looks:";
-                            os << second[i].Tag() << ". Only Look(s)";
+                            os << val.Tag() << ". Only Look(s)";
                             os << " currently handled.";
                             LogWarning(os.str());
                         }
@@ -1651,9 +1557,7 @@ OCIO_NAMESPACE_ENTER
             out << YAML::BeginMap;
             out << YAML::Key << "ocio_profile_version" << YAML::Value << 1;
             out << YAML::Newline;
-#ifndef OLDYAML
             out << YAML::Newline;
-#endif
             
             if(c->getNumEnvironmentVars() > 0)
             {
@@ -1685,9 +1589,7 @@ OCIO_NAMESPACE_ENTER
             
             // Roles
             out << YAML::Newline;
-#ifndef OLDYAML
             out << YAML::Newline;
-#endif
             out << YAML::Key << "roles";
             out << YAML::Value << YAML::BeginMap;
             for(int i = 0; i < c->getNumRoles(); ++i)
@@ -1710,9 +1612,7 @@ OCIO_NAMESPACE_ENTER
                 }
             }
             out << YAML::EndMap;
-#ifndef OLDYAML
             out << YAML::Newline;
-#endif
             
             // Displays
             out << YAML::Newline;
@@ -1737,9 +1637,7 @@ OCIO_NAMESPACE_ENTER
             }
             out << YAML::EndMap;
             
-#ifndef OLDYAML
             out << YAML::Newline;
-#endif
             out << YAML::Newline;
             out << YAML::Key << "active_displays";
             std::vector<std::string> active_displays;
@@ -1751,9 +1649,7 @@ OCIO_NAMESPACE_ENTER
             if(c->getActiveViews() != NULL && strlen(c->getActiveViews()) > 0)
                 SplitStringEnvStyle(active_views, c->getActiveViews());
             out << YAML::Value << YAML::Flow << active_views;
-#ifndef OLDYAML
             out << YAML::Newline;
-#endif
             
             // Looks
             if(c->getNumLooks() > 0)
@@ -1794,13 +1690,7 @@ OCIO_NAMESPACE_ENTER
     {
         try
         {
-#ifdef OLDYAML
-            YAML::Parser parser(istream);
-            YAML::Node node;
-            parser.GetNextDocument(node);
-#else
             YAML::Node node = YAML::Load(istream);
-#endif
             load(node, c, filename);
         }
         catch(const std::exception & e)
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -247,7 +247,7 @@ endif(USE_EXTERNAL_TINYXML)
 
 if(USE_EXTERNAL_YAML)
     # Set minimum yaml version for non-patched sources.
-    set(YAML_VERSION_MIN "0.3.0")
+    set(YAML_VERSION_MIN "0.6.3")
     include(FindPkgConfig)
     pkg_check_modules(PC_YAML_CPP REQUIRED QUIET yaml-cpp)
     find_path(YAML_CPP_INCLUDE_DIR yaml-cpp/yaml.h
@@ -360,10 +360,6 @@ else(USE_EXTERNAL_YAML) ## provide 2 way
     set_target_properties(YAML_CPP_LIB PROPERTIES FOLDER External)
 endif(USE_EXTERNAL_YAML)
 
-if(YAML_CPP_VERSION VERSION_LESS "0.5.0")
-    set(YAML_CPP_COMPILE_FLAGS "-DOLDYAML")
-endif()
-
 ###############################################################################
 ### Externals ###
 
